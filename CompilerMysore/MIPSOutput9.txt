	# This is an auto-generated file with MIPS Code generated from a Pascal program, using Ishan's compiler.
	# @author Ishan Mysore
	# @version 01-08-2024 14:21:43
	.data
	nL: .asciiz "\n"
	.text
	.globl main
main:
	li $v0 14	# stores number's value into $v0
	subu $sp $sp 4
	sw $v0 ($sp) 	 # push $v0
	li $v0 14	# stores number's value into $v0
	lw $t0 ($sp) 	 # pop $v0
	addu $sp $sp 4
	bne $t0 $v0 endif0	# jumps to target label if $t0 doesn't equal $v0
	li $v0 14	# stores number's value into $v0
	subu $sp $sp 4
	sw $v0 ($sp) 	 # push $v0
	li $v0 14	# stores number's value into $v0
	lw $t0 ($sp) 	 # pop $v0
	addu $sp $sp 4
	beq $t0 $v0 endif1	# jumps to target label if $t0 equals $v0
	li $v0 3	# stores number's value into $v0
	move $a0 $v0
	li $v0 1
	syscall
	li $v0 4
	la $a0, nL	# prints newline statement
	syscall
	j endif1
endif1:
	li $v0 14	# stores number's value into $v0
	subu $sp $sp 4
	sw $v0 ($sp) 	 # push $v0
	li $v0 14	# stores number's value into $v0
	lw $t0 ($sp) 	 # pop $v0
	addu $sp $sp 4
	bgt $t0 $v0 endif2	# jumps to target label if $t0 is greater than $v0
	li $v0 4	# stores number's value into $v0
	move $a0 $v0
	li $v0 1
	syscall
	li $v0 4
	la $a0, nL	# prints newline statement
	syscall
	j endif2
endif2:
	j endif0
endif0:
	li $v0 15	# stores number's value into $v0
	subu $sp $sp 4
	sw $v0 ($sp) 	 # push $v0
	li $v0 14	# stores number's value into $v0
	lw $t0 ($sp) 	 # pop $v0
	addu $sp $sp 4
	ble $t0 $v0 endif3	# jumps to target label if $t0 is less than or equal to $v0
	li $v0 5	# stores number's value into $v0
	move $a0 $v0
	li $v0 1
	syscall
	li $v0 4
	la $a0, nL	# prints newline statement
	syscall
	j endif3
endif3:
	li $v0, 10	# normal termination
	syscall
